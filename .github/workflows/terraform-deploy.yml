name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    env:
      # AWS Credentials for Terraform
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-southeast-2

      # Pass DB credentials to Terraform via TF_VAR_
      TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      # 3️⃣ Clean stale DynamoDB locks
      - name: Clean stale Terraform locks
        run: |
          echo "Scanning for existing locks..."
          LOCK_IDS=$(aws dynamodb scan \
            --table-name terraform-locks \
            --region $AWS_REGION \
            --query 'Items[].LockID.S' --output text)
          if [ -n "$LOCK_IDS" ]; then
            for LOCK in $LOCK_IDS; do
              echo "Deleting stale lock: $LOCK"
              aws dynamodb delete-item \
                --table-name terraform-locks \
                --key "{\"LockID\": {\"S\": \"$LOCK\"}}" \
                --region $AWS_REGION
            done
          else
            echo "No stale locks found."
          fi

      # 4️⃣ Terraform init
      - name: Terraform Init
        run: terraform init -input=false

      # 5️⃣ Terraform fmt
      - name: Terraform Format
        run: terraform fmt -recursive

      # 6️⃣ Terraform validate
      - name: Terraform Validate
        run: terraform validate

      # 7️⃣ Terraform plan
      - name: Terraform Plan
        run: terraform plan -input=false

      # 8️⃣ Terraform apply (only on main branch)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
